package OnUnitEnterLeave

import MapBounds
import NoWurst
import Unit
import Trigger
import Player
import TempGroups
import AbilityObjEditing
import Group

/**
 * Rawcode for the undefend ability to detect leavers
 */
constant int LEAVER_ABILITY_ID = '!e@$'

/**
 * Unit who fired etheir the enter or leave event
 */
unit triggerUnit = null

/**
 * Avoid double leave event fire
 */
constant group validUnits = CreateGroup()

/**
 * "events"
 */
constant trigger onEnterTrigger = CreateTrigger()
constant trigger onLeaveTrigger = CreateTrigger()

/**
 * Get the unit who fired the event
 */
public function getEnterLeaveUnit() returns unit
	return triggerUnit

/**
 * Register a code to fire when a unit enters the map
 */	
public function onEnter(code c)
	onEnterTrigger.addCondition(Condition(c))

/**
 * Register a code to fire when a unit leaves the map
 */
public function onLeave(code c)
	onLeaveTrigger.addCondition(Condition(c))

/**
 * Check if the unit has the leaver ability (true if it does)
 */
function hasLeaverDetector(unit whichUnit) returns boolean
	return whichUnit.getAbilityLevel(LEAVER_ABILITY_ID) != 0
	
/**
 * Add leaver ability to unit (false if already has it)
 */
function addLeaverDetector(unit whichUnit) returns boolean
	if (hasLeaverDetector(whichUnit) == false)
		whichUnit.addAbility(LEAVER_ABILITY_ID)
		whichUnit.makeAbilityPermanent(LEAVER_ABILITY_ID, true)
		
		return true
	
	return false

/**
 * Take the unit and fire enter or leave event
 */
function fireEvent(unit whichUnit, trigger whichEvent)
	unit prevTriggerUnit = triggerUnit
	triggerUnit = whichUnit
	
	if (triggerUnit != null)
		whichEvent.evaluate()
		
	triggerUnit = prevTriggerUnit
	prevTriggerUnit = null

function onEnterEx() returns boolean
	validUnits.addUnit(GetFilterUnit())
	addLeaverDetector(GetFilterUnit())
	fireEvent(GetFilterUnit(), onEnterTrigger)
	
	return false

function onLeaveEx() returns boolean
	unit leaverUnit = GetTriggerUnit()
	
	if (hasLeaverDetector(leaverUnit) == false and validUnits.contains(leaverUnit))
		validUnits.removeUnit(leaverUnit)
		fireEvent(leaverUnit, onLeaveTrigger)
		
	leaverUnit = null
	
	return false
	
init
	trigger onLeaveTrigger = CreateTrigger()
	boolexpr onEnterCondition = Condition(function onEnterEx)
	boolexpr onLeaveCondition = Condition(function onLeaveEx)

	for i = 0 to bj_MAX_PLAYER_SLOTS-1
		onLeaveTrigger.registerPlayerUnitEvent(players[i], EVENT_PLAYER_UNIT_ISSUED_ORDER, null)
		GroupEnumUnitsOfPlayer(ENUM_GROUP, players[i], onEnterCondition)
		players[i].setAbilityAvailable(LEAVER_ABILITY_ID, false)
	
	onLeaveTrigger.addCondition(onLeaveCondition)
	CreateTrigger().registerEnterRegion(boundRegion, onEnterCondition)
	
	onLeaveTrigger = null

@compiletime function generateLeaverAbility()
	AbilityDefinitionDefend leaverAbility = new AbilityDefinitionDefend(LEAVER_ABILITY_ID)
	
	leaverAbility.setName("Leaver Detect")
	leaverAbility.setArtCaster("")
	leaverAbility.setIconNormal("")
	leaverAbility.setRace(Race.Unknown)
	